== DESCRIPTION

{manname} enables the manual exploration of the states of a model starting at its initial state in a textual interface in the shell. 'trace.gcf/trace.pinssim' specifies the file to load a trace from that was previously generated by LTSmin (.gcf) or explored and saved with PINSsim (.pinssim). Requirement for passing a trace as argument here is that it starts in the initial state of the model. Navigating to another state and loading a trace that starts from that state is possible within the simulator by disable restartOnTraceLoad.

== OVERVIEW OF COMMANDS 
availabe within the PINSsim textual interface:

  help                           show all options
PRINT OUT
  current                        print info of current node
  state                          print current state
  trans                          print available transitions and subsequent states
  path (states) (rw)             print path of transitions taken (with states and read-write dependencies)
  tree (states)                  print tree of transitions explored (with states)
  print2File                     print output to [FILE] (default:pinssim.out) instead to stdout
             (start) [FILE]      start printing to [FILE] (default:pinssim.out)
             (stop)              stop printing to output file
STATE EXPLORATION
  go / > [TRANSNUMBER]           take transition with TRANSNUMBER and explore potential successor states
  goback / .. (clear/keep)       go back to parent state.
                                 (and clears/keeps the state. See 'set' to change default)
  restart (clear/keep)           restart exploration from initial state
                                 (and clears/keeps the explored states. See 'set' to change default)
  load [TYPE] [FILE]             load [TYPE] information from [FILE]
       trace  [file.gcf]         load trace generated by LTSmin model checker and replays it
       trace  [file.pinssim]     load previously explored/generated trace and replays it
  save [TYPE] [FILE]             save [TYPE] information to [FILE]
       trace  [file.pinssim]     save current trace to file
  replay [ACTION]            	   replays [ACTION] if available
         trace                   replays trace previously loaded from a file
SETTINGS
  set [OPTION] [VALUE]           Set OPTION to VALUE. OPTIONS:
      loopDetection              true/false - default: false
      clearMemOnGoBack           true/false - default: false
      clearMemOnRestart          true/false - default: true
      restartOnTraceLoad         true/false - default: true
EXIT
  quit / q                       quit PINSsim

== EXAMPLE
=== Model

                              initial  state
                              /      |      \
                    transGrp 1  transGrp 2  transGrp 3
                           /         |        \  
               succ state 1    succ state 2    succ state 3 
                                              /     |      \
                                    transGrp 1  transGrp 5  transGrp 7
                                           /        |        \  
                               succ state 3.1 succ state 3.2  final state

=== PINSsim workflow
*Started PINSsim, model was loaded and initial state was fetched sucessfully:*

\-----------------------------------------------------------------------------------------------

INITIAL state:
--- NODE -----------------------
-> This is the INITIAL state!
State of this node:
              initial state vector
Transitions available from here:
group     1 - sucessor state 1 vector
group     2 - sucessor state 2 vector
group     3 - sucessor state 3 vector

Tree depth: 0
END NODE -------------------

\-----------------------------------------------------------------------------------------------

*Navigation in between states:*

\-----------------------------------------------------------------------------------------------

Enter command below - 'help' for options - 'quit' to quit:
go 2

\-----------------------------------------------------------------------------------------------

Taking transition 126 - exploring potential successor states.

--- NODE -----------------------
State of parent node:
              inital state vector
State of this node:
              successor state 2 vector
 No transitions available from here!
 INFO: Enter 'goback' or '..' to go back to the parent state.parent
 Transition that lead here: 2 Tree depth: 1
--- END NODE -------------------

\-----------------------------------------------------------------------------------------------

Enter command below - 'help' for options - 'quit' to quit:
goback

\-----------------------------------------------------------------------------------------------

Going back to parent state.

\-----------------------------------------------------------------------------------------------

*A tree representation of all explored notes would look like following in PINSsim:*

\-----------------------------------------------------------------------------------------------

Enter command below - 'help' for options - 'quit' to quit:
tree

\-----------------------------------------------------------------------------------------------

 {backslash}INITAL 
  | 1 
  | 2  
  {backslash} 3 
   | 1 
   | 5  
   {backslash} 7  

\-----------------------------------------------------------------------------------------------

== OPTIONS

=== General Options

*--version*::
        Print version string of this tool.

*-h*, *--help*::
        Print help text - CAUTION: Not all options listed are working for PINSsim

*--usage*::
        Print short usage summary. - CAUTION: Not all options listed are working for PINSsim

== PINSSIM FILE FORMAT

The .pinssim file format is for now a simple comma separated file with the following structure:

(length of state vector);(number of edgle labels);(number of state labels);(number of transitions in trace: n);(transition group 1);(transition group 2);...;(transition group n);

The first three are for now only used to check on load whether this trace matches the current model.
The number of transitions and the actual trace are used to extract, store and replay the trace.

include::support.txt[]
